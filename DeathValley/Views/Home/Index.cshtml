@model DeathValley.Models.UserData

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="display:flex">
        <div id="curve_chart" style="height:1200px; width:1300px "></div>
        <h4>Function:</h4>
        <h4> ax^2+bx+c</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="width:30%;height:30%">
        <div class="form-group">
            @Html.LabelFor(model => model.RangeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RangeFrom, new { htmlAttributes = new { @class = "form-control", @id="edit" } })
                @Html.ValidationMessageFor(model => model.RangeFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RangeTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RangeTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RangeTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.step, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.step, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.step, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.a, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.a, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.a, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.b, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.b, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.b, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.c, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.c, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.c, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button type="submit" class="btn btn-primary">PLOT</button>
            </div>
        </div>
        </div>
    </div>
}